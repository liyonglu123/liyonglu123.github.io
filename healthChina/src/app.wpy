<style lang="less">
.container {
  // height: 100%;
  width: 100%;
  min-height: 100%;
  display: flex;
  flex-direction: column;
  // align-items: center;
  // justify-content: space-between;
  box-sizing: border-box;
}
</style>  

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import Promise from 'promise-polyfill'; 

export default class extends wepy.app {
  config = {
    pages: [
      'pages/message/message',
      'pages/science',
      'pages/toolCase',
      'pages/message/messageDetail'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
    "list": [{
      "pagePath": "pages/message/message",
      "text": "咨讯",
      "iconPath": "images/raw.png",
      "selectedIconPath": "images/selected.png"
    }, {
      "pagePath": "pages/science",
      "text": "科普",
      "iconPath": "images/raw.png",
      "selectedIconPath": "images/selected.png"
    },{
      "pagePath": "pages/toolCase",
      "text": "工具箱",
      "iconPath": "images/raw.png",
      "selectedIconPath": "images/selected.png"
    }]
  },
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    // this.use('requestfix')  不支持promise以及 async和await
    this.use('promisify'); // 支持promise以及 async和await
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
