/**
 * 深浅拷贝什么时候使用到，常见的使用方式  https://segmentfault.com/a/1190000020255831
 * 数据类型：基本数据类型，引用数据类型以及区别，从堆栈角度分析
 * 浅拷贝：
 *      直接赋值，使用对象解构，使用循环，Object.assign
 *      只是实现第一层的拷贝，无法实现多层的深拷贝
 * 深拷贝：
 *      值为 undefined 的属性在转换后丢失；
 *      值为 Symbol 类型的属性在转换后丢失；
 *      值为 RegExp 对象的属性在转换后变成了空对象；
 *      值为 函数对象的属性在转换后丢失；
 *      值为 Date 对象的属性在转换后变成了字符串；
 *      会抛弃对象的 constructor,所有的构造函数会指向 Object；
 *      对象的循环引用会抛出错误。
 *
 * 
 * 基本实现

递归能力
循环引用

考虑问题的全面性
理解weakmap的真正意义
多种类型

考虑问题的严谨性
创建各种引用类型的方法，JS API的熟练程度
准确的判断数据类型，对数据类型的理解程度
通用遍历：

写代码可以考虑性能优化
了解集中遍历的效率
代码抽象能力
拷贝函数：

箭头函数和普通函数的区别
正则表达式熟练程度
 */
